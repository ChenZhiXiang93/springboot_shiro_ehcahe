<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="czx.wt.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="czx.wt.pojo.Role" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="role_name" property="roleName" jdbcType="VARCHAR" />
        <result column="descpt" property="descpt" jdbcType="VARCHAR" />
        <result column="code" property="code" jdbcType="VARCHAR" />
        <result column="insert_uid" property="insertUid" jdbcType="INTEGER" />
        <result column="insert_time" property="insertTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Base_Column_List">
        id, role_name, descpt, code, insert_uid, insert_time, update_time
    </sql>

    <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from role where id = #{id,jdbcType=INTEGER}
    </update>

    <insert id="insert" parameterType="czx.wt.pojo.User" useGeneratedKeys="true" keyProperty="id">
        insert into role (id, role_name, descpt,code, insert_uid, insert_time,update_time)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{descpt,jdbcType=VARCHAR},
    #{code,jdbcType=VARCHAR}, #{insertUid,jdbcType=INTEGER}, #{insertTime,jdbcType=TIMESTAMP},
    #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include> from role where id = #{id,jdbcType=INTEGER}
    </select>

    <update id="updateByPrimaryKey" parameterType="czx.wt.pojo.Role">
        update role
        set role_name = #{roleName,jdbcType=VARCHAR},descpt = #{descpt,jdbcType=VARCHAR},
          code = #{code,jdbcType=VARCHAR},insert_uid = #{insertUid,jdbcType=INTEGER},
          insert_time = #{insertTime,jdbcType=TIMESTAMP},update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from role
    </select>

    <!--=Start findRoleAndPerms 查询角色列表-->
    <resultMap id="rolePerms" type="czx.wt.entity.RoleVO" >
        <id column="id" property="id" />
        <result column="role_name" property="roleName"/>
        <result column="code" property="code"/>
        <result column="descpt" property="descpt"/>
        <result column="insert_uid" property="insertUid"/>
        <result column="insert_time" property="insertTime"/>
        <collection property="rolePerms" ofType="czx.wt.pojo.RolePermissionKey">
            <result  column="role_id" property="roleId"/>
            <result column="permit_id" property="permitId"/>
        </collection>
    </resultMap>
    <select id="findRoleAndPerms" resultMap="rolePerms">
        select
            r.*,rp.role_id,rp.permit_id
            from role r
            INNER JOIN role_permission rp ON r.id=rp.role_id
        WHERE r.id=#{id}
  </select>

    <!--=Start getRoleByUserId 根据用户id查询角色数据-->
    <select id="getRoleByUserId" resultType="czx.wt.pojo.Role">
        select
            ur.role_id id,r.role_name,r.code
            from user_role ur
            INNER JOIN role r ON r.id=ur.role_id
        WHERE ur.user_id=#{userId}
  </select>

    <!--=Start getRoles 查询角色列表-->
    <select id="getRoles" resultMap="BaseResultMap">
        select
          <include refid="Base_Column_List" />
        from role
    </select>
</mapper>